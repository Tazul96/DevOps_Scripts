#!/bin/bash

# Update and upgrade the Linux instance
sudo apt-get update
sudo apt-get upgrade -y

# Install Docker
sudo apt install -y apt-transport-https curl ca-certificates software-properties-common
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update -y
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
sudo systemctl start docker
sudo systemctl enable docker
sudo usermod -aG docker $USER
newgrp docker
sudo chmod 666 /var/run/docker.sock

# Install Nginx and update configuration files
sudo apt-get install -y nginx

# Create the Nginx config for test.ambel.ca
sudo bash -c 'cat > /etc/nginx/conf.d/test.ambel.conf <<EOF
upstream backend {
    server localhost:8000;
}

server {
    server_name test.ambel.ca www.test.ambel.ca;
	client_max_body_size 50M;

    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }

    location /api {
        proxy_pass http://backend;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }

    location /socket.io {
        proxy_pass http://backend;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass \$http_upgrade;
    }
	
	location /userdata-extractor {
        proxy_pass http://backend;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
	
	location /api/messageID-extractor {
        proxy_pass http://backend;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF'

# Create the Nginx config for message.test.ambel.ca
sudo bash -c 'cat > /etc/nginx/conf.d/message.test.ambel.ca.conf <<EOF
server {
    server_name message.test.ambel.ca www.message.test.ambel.ca;
	client_max_body_size 50M;

    location / {
        proxy_pass http://localhost:3001;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }

    location /messages/api {
        proxy_pass http://localhost:8001;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }

    location /socket.io {
        proxy_pass http://localhost:8001;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass \$http_upgrade;
    }
}
EOF'

sudo systemctl restart nginx

# Docker: Pull and run images
docker login -u tazul96 -p Ta@91912113
docker pull tazul96/ambel:F-latest
docker run -d -p 3000:3000 --name frontend_app --restart always tazul96/ambel:F-latest

docker pull tazul96/ambel:B-latest
docker run -d --name backend_app --restart always -p 8000:8000 tazul96/ambel:B-latest

docker pull tazul96/ambel:MF-latest
docker run -d -p 3001:3001 --name message_frontend --restart always tazul96/ambel:MF-latest

docker pull tazul96/ambel:MB-latest
docker run -d -p 8001:8001 --name message-backend --restart always tazul96/ambel:MB-latest

sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot

